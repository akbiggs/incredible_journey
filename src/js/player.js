// Generated by CoffeeScript 1.7.1
(function() {
  var Player,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Player = Player = (function(_super) {
    __extends(Player, _super);

    Player.prototype.acceleration = 0.2;

    Player.prototype.maxSpeed = 5;

    function Player(position) {
      Player.__super__.constructor.call(this, position, $V([100, 100]));
    }

    Player.prototype.update = function() {
      var accel;
      accel = Vector.Zero(2);
      if (kd.W.isDown()) {
        accel = accel.add([0, -this.acceleration]);
      }
      if (kd.S.isDown()) {
        accel = accel.add([0, this.acceleration]);
      }
      if (kd.A.isDown()) {
        accel = accel.add([-this.acceleration, 0]);
      }
      if (kd.D.isDown()) {
        accel = accel.add([this.acceleration, 0]);
      }
      if (accel.eql([0, 0])) {
        this.velocity = this.velocity.multiply(0.95);
      } else {
        this.velocity = this.velocity.add(accel);
      }
      if (this.velocity.length() > this.maxSpeed) {
        this.velocity = this.velocity.toUnitVector().multiply(this.maxSpeed);
      }
      return Player.__super__.update.call(this);
    };

    return Player;

  })(GameObject);

}).call(this);
