// Generated by CoffeeScript 1.7.1
(function() {
  var Particle,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Particle = Particle = (function(_super) {
    __extends(Particle, _super);

    function Particle(position, size, velocity, color, properties) {
      var defaults, key, value;
      defaults = {
        rotation: 0,
        rotationDelta: Math.random() / 20,
        initialLifespan: 20,
        acceleration: $V([0, 0])
      };
      properties = Object.extend(defaults, properties);
      Particle.__super__.constructor.call(this, position, size, velocity);
      for (key in properties) {
        value = properties[key];
        this[key] = value;
      }
      this.lifespan = this.initialLifespan;
    }

    Particle.prototype.update = function(state) {
      this.lifespan = Math.max(0, this.lifespan - 1);
      this.velocity = this.velocity.add(this.acceleration);
      this.rotation += this.rotationDelta;
      return Particle.__super__.update.call(this, state);
    };

    Particle.prototype.draw = function(ctx) {
      ctx.globalAlpha = this.lifespan / this.initialLifespan;
      ctx.fillStyle = this.color;
      return Particle.__super__.draw.call(this, ctx);
    };

    return Particle;

  })(GameObject);

}).call(this);
